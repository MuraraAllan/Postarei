/*const chai = require('chai');
const expect = chai.expect;
const chaiHTTP = require('chai-http');
chai.use(chaiHTTP);
describe('third requisition over githubapi', () => { 
    beforeEach(() => {
      action = 'Fullstack-Javacript-Developer-Example-Project'
      thirdPoint = 'https://api.github.com/repos/MuraraAllan/'
    });

    describe('GET LAST 5 COMMITS', () => {
    it ('should return the last 5 commits from github', (done) => {
        action = action.concat('/commits');
        const lastFive = [];
        chai.request(thirdPoint).get(action)
        .end((err,res) => {
          res.body.slice(0,5).forEach((current,index) => {
            lastFive.push(current.commit);
          });
          done();
          expect(lastFive).to.have.lengthOf(5);
        });
      });
    });

    describe('/repository/:action/new-project', () => {
      it('should create a new project in the repository id if called as POST', () => {
        expect(action).to.equal('Fullstack-Javacript-Developer-Example-Project');
      }); 
    });

    describe('/repository/:action/:project', () => {
      it('should delete a project from the repository if called as DEL', () => {
        expect(action).to.equal('Fullstack-Javacript-Developer-Example-Project');
      });
    });
  
});


*/
